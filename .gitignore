# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js

# testing
/coverage

# production
/build

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*


# Ignore Node.js build artifacts
node_modules/
build/
dist/
.cache/

# Ignore backend environment file (this may vary based on your setup)
backend/.env

# Ignore frontend build artifacts
frontend/build/
frontend/node_modules/

backend/node_modules/

# Ignore any local development config or secrets
.env.local
.env.development.local
.env.test.local
.env.production.local

# Ignore OS generated files
.DS_Store
Thumbs.db

# Ignore logs
logs/
*.log

# Ignore npm package locks
package-lock.json
yarn.lock

# Ignore editor-specific files
.vscode/
*.idea/

# Ignore any sensitive or private information (e.g., keys, passwords)
secrets.json

# Ignore any backup files
*.bak

# Ignore any temporary files
*.tmp

# Ignore any compiled files
*.exe
*.dll
*.so
*.dylib
*.log
*.out

# Ignore any user-specific data
*.history
*.pid

# Ignore coverage reports generated by test coverage tools
coverage/

# Ignore dependencies and caches from various tools
/.yarn
/.pnp
.pnp.js
.cache
yarn-error.log
npm-debug.log
yarn-debug.log*
yarn.lock
.pnp.*


# For IDEs, you might want to ignore some additional files
# For example, Visual Studio Code:
# .vscode/
